@page "/Admin/CreateCategory"
@layout AdminLayout
@using TravelSite.Models
@using TravelSite.Data

@inject AppDbContext dbContext
@inject NavigationManager nav


<div class="row justify-content-center">
	<div class="col-8 d-flex justify-content-center">
		<h3>Create Category</h3>
	</div>
	<div class="col-8 d-flex justify-content-center">
		<EditForm class="row g-3" Enhance="true" Model="Category" FormName="CreateCategoryForm" OnValidSubmit="@(async () => await CreateCategoryMethod())">
			<DataAnnotationsValidator />	
			<div class="col-6">
				<div class="form-group">
					<label class="form-label">Name</label>
					<InputText class="form-control" @bind-Value=Category.Name></InputText>
					<ValidationMessage class="text-danger" For="@(()=>Category.Name)" />
				</div>
			</div>
			<div class="col-6">
				<div class="form-group">
					<label class="form-label">Country</label>
					<InputText class="form-control" @bind-Value=Category.Country></InputText>
					<ValidationMessage class="text-danger" For="@(()=>Category.Country)" />
				</div>
			</div>
			<div class="col-12">
				<div class="form-group">
					<label class="form-label">Description</label>
					<InputText class="form-control" @bind-Value=Category.Description></InputText>
					<ValidationMessage class="text-danger" For="@(()=>Category.Description)" />
				</div>
			</div>
			<div class="col-12">
				<button class="btn btn-primary" type="submit">Create Category</button>
			</div>
		</EditForm>
	</div>
</div>

@code {
	[SupplyParameterFromForm]
	Category Category { get; set; } = new();

	public async Task CreateCategoryMethod() {
		dbContext.Categories.Add(Category);
		await dbContext.SaveChangesAsync();
		nav.NavigateTo("/Admin/Categories");
	}
}